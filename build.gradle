plugins {
    id 'checkstyle'
    id 'java-library'
}

apply plugin: 'java'
group 'com.opendxl.streaming'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    testImplementation 'junit:junit:4.12'
    testImplementation 'com.github.stefanbirkner:system-rules:1.19.0'
    implementation 'com.e-movimento.tinytools:privilegedaccessor:1.2.2'
    implementation 'net.sf.jopt-simple:jopt-simple:5.0.4'
    implementation 'org.apache.httpcomponents:httpclient:4.5.5'
    implementation 'com.google.code.gson:gson:2.8.5'
    implementation 'log4j:log4j:1.2.17'
}

// Jar Manifest info
jar {
    manifest {
        attributes 'Main-Class': 'com.opendxl.streaming.cli.CommandLineInterface',
                'Implementation-Title': project.name,
                'Implementation-Version': project.version
        doFirst {
            from {
                configurations.runtime.collect { it.isDirectory() ? it : zipTree(it) }
                configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
            }
        }
        baseName = rootProject.name
    }
}

// Task for creating a jar with the source files
task sourceJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
    baseName = rootProject.name

}

// Task for creating a jar with JavaDoc
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
    baseName = rootProject.name
}

javadoc {
    source = sourceSets.main.allJava
    options.memberLevel = JavadocMemberLevel.PUBLIC
}

artifacts {
    archives jar
    archives sourceJar
    archives javadocJar
}



// Make check style run before creating a jar
jar.dependsOn(checkstyleMain)