plugins {
    id 'java'
    id 'checkstyle'
}

apply plugin: 'java'
group 'com.opendxl.streaming'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
    maven {
        url "https://artifactory-lvs.corpzone.internalzone.com/artifactory/databus-local"
    }
}

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.12'
    testCompile group: 'com.github.stefanbirkner', name: 'system-rules', version: '1.19.0'
    compile group: 'com.e-movimento.tinytools', name: 'privilegedaccessor', version: '1.2.2'
    compile group: 'net.sf.jopt-simple', name: 'jopt-simple', version: '5.0.4'
    compile group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.5'
    compile group: 'com.google.code.gson', name: 'gson', version: '2.8.5'

}

// Jar Manifest info
jar {
    manifest {
        attributes 'Main-Class': 'com.opendxl.streaming.cli.CommandLineInterface',
                   'Implementation-Title': project.name,
                   'Implementation-Version': project.version
        doFirst {
            from { configurations.runtime.collect { it.isDirectory() ? it : zipTree(it) } }
        }
    }
}


// Task for creating a jar with the source files
task sourceJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

// Task for creating a jar with JavaDoc
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

javadoc {
    source = sourceSets.main.allJava
    classpath = configurations.compile
    options.memberLevel = JavadocMemberLevel.PUBLIC
}

artifacts {
    archives jar
    archives sourceJar
    archives javadocJar
}

// Make check style run before creating a jar
jar.dependsOn(checkstyleMain)